/*!
 * Tozny e3db
 *
 * LICENSE
 *
 * Tozny dual licenses this product. For commercial use, please contact
 * info@tozny.com. For non-commercial use, this license permits use of the
 * software only by government agencies, schools, universities, non-profit
 * organizations or individuals on projects that do not receive external
 * funding other than government research grants and contracts. Any other use
 * requires a commercial license. For the full license, please see LICENSE.md,
 * in this source repository.
 *
 * @copyright Copyright (c) 2018-19 Tozny, LLC (https://tozny.com)
 */
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _signable = _interopRequireDefault(require("../types/signable"));

/**
 * Representation of either plaintext or encrypted data encapsulated in a note.
 */
var NoteData =
/*#__PURE__*/
function (_Signable) {
  (0, _inherits2["default"])(NoteData, _Signable);

  function NoteData(data) {
    var _this;

    (0, _classCallCheck2["default"])(this, NoteData);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(NoteData).call(this));

    for (var key in data) {
      if (data.hasOwnProperty(key)) {
        _this[key] = data[key];
      }
    }

    return _this;
  }

  return NoteData;
}(_signable["default"]);

exports["default"] = NoteData;