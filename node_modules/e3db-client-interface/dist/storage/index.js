/*!
 * Tozny e3db
 *
 * LICENSE
 *
 * Tozny dual licenses this product. For commercial use, please contact
 * info@tozny.com. For non-commercial use, the contents of this file are
 * subject to the TOZNY NON-COMMERCIAL LICENSE (the "License") which
 * permits use of the software only by government agencies, schools,
 * universities, non-profit organizations or individuals on projects that
 * do not receive external funding other than government research grants
 * and contracts.  Any other use requires a commercial license. You may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at https://tozny.com/legal/non-commercial-license.
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations under
 * the License. Portions of the software are Copyright (c) TOZNY LLC, 2018-19.
 * All rights reserved.
 *
 * @copyright Copyright (c) 2018-19 Tozny, LLC (https://tozny.com)
 */
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isExtension = isExtension;
Object.defineProperty(exports, "Config", {
  enumerable: true,
  get: function get() {
    return _config["default"];
  }
});
Object.defineProperty(exports, "Client", {
  enumerable: true,
  get: function get() {
    return _client["default"];
  }
});

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _config = _interopRequireDefault(require("./config"));

var _client = _interopRequireDefault(require("./client"));

function isExtension(storage) {
  if ((0, _typeof2["default"])(storage) !== 'object') {
    return false;
  }

  if (!(storage.Client.prototype instanceof _client["default"])) {
    return false;
  }

  if (storage.Config !== _config["default"] && !(storage.Config.prototype instanceof _config["default"])) {
    return false;
  }

  return true;
}